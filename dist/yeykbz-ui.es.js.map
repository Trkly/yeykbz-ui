{"version":3,"file":"yeykbz-ui.es.js","sources":["../src/Button/Button.tsx","../src/utils/withInstall.ts","../src/Button/index.ts","../src/Card/Card.tsx","../src/Card/index.ts","../src/install.ts"],"sourcesContent":["import { defineComponent } from \"vue\";\nimport type { PropType } from \"vue\";\nimport styles from \"./Button.module.css\";\n\nexport type ISize = \"small\" | \"medium\" | \"large\";\nexport type IColor =\n  | \"black\"\n  | \"gray\"\n  | \"red\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"indigo\"\n  | \"purple\"\n  | \"pink\";\n\nexport const props = {\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  color: {\n    type: String as PropType<IColor>,\n    default: \"blue\",\n  },\n  round: {\n    type: Boolean,\n    default: false,\n  },\n  plain: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String,\n    default: \"\",\n  },\n} as const;\n\nexport default defineComponent({\n  name: \"YButton\",\n  props,\n  setup(props, { slots }) {\n    // 动态类名映射\n    const getColorClass = () => {\n      const classKey = props.plain\n        ? `plain-${props.color}`\n        : `color-${props.color}`;\n      // 这里使用 styles[classKey] 来获取对应的样式类名\n      return styles[classKey] || \"\"; // 防止undefined导致样式异常\n    };\n\n    return () => (\n      <button\n        class={[\n          styles.base,\n          styles[props.size], // 直接使用 size 映射\n          props.round ? styles.round : styles.square,\n          getColorClass(),\n          styles.hoverEffect,\n        ]}\n      >\n        {props.icon && (\n          <i class={`i-ic-baseline-${props.icon} ${styles.icon}`}></i>\n        )}\n        {slots.default?.()}\n      </button>\n    );\n  },\n});\n","import type { App, DefineComponent, Plugin } from \"vue\";\r\n\r\nexport const withInstall = <T extends DefineComponent>(\r\n  comp: T & { name?: string }\r\n) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const c = comp as T & { name: string } & { install?: (app: App) => void };\r\n\r\n  c.install = (app: App) => {\r\n    if (!c.name || typeof c.name !== \"string\") {\r\n      throw new Error(\"Component must have a valid name property\");\r\n    }\r\n    app.component(c.name, c);\r\n  };\r\n\r\n  return c as T & Plugin;\r\n};\r\n","import { DefineComponent } from \"vue\";\nimport Button from \"./Button\";\nimport { withInstall } from \"../utils/withInstall\";\n\n// 使用 withInstall 函数来增强 Button 组件\nexport const YButton = withInstall(Button as unknown as DefineComponent);\n\n// 默认导出带install方法的组件\nexport default YButton;\n","import { defineComponent } from \"vue\";\nimport type { PropType } from \"vue\";\nimport styles from \"./Card.module.css\"; // 导入 CSS Modules\n\nexport default defineComponent({\n  name: \"YCard\",\n  props: {\n    shadow: {\n      type: String as PropType<\"always\" | \"hover\" | \"never\">,\n      default: \"always\",\n    },\n    bodyStyle: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props, { slots }) {\n    // 动态阴影类映射\n    const shadowClassMap = {\n      always: styles.shadowAlways,\n      hover: styles.shadowHover,\n      never: styles.shadowNever,\n    };\n\n    // 插槽存在性判断\n    const hasHeader = !!slots.header;\n    const hasFooter = !!slots.footer;\n    const hasImage = !!slots.image;\n    return () => (\n      <div class={[styles.cardBase, shadowClassMap[props.shadow]]}>\n        {/* 图片插槽 */}\n        {hasImage && (\n          <div class={[styles.borderSection, styles.flexCenter, \"border-b\"]}>\n            {slots.image?.()}\n          </div>\n        )}\n\n        {/* Header */}\n        {hasHeader && (\n          <div\n            class={[styles.borderSection, \"border-b p-4\", styles.flexCenter]}\n          >\n            {slots.header?.()}\n          </div>\n        )}\n\n        {/* 内容区 */}\n        <div\n          class={[\n            styles.contentBase,\n            !hasHeader && styles.contentNoHeader,\n            !hasFooter && styles.contentNoFooter,\n          ]}\n          style={props.bodyStyle}\n        >\n          {slots.default?.()}\n        </div>\n\n        {/* Footer */}\n        {hasFooter && (\n          <div\n            class={[styles.borderSection, \"border-t p-4\", styles.flexCenter]}\n          >\n            {slots.footer?.()}\n          </div>\n        )}\n      </div>\n    );\n  },\n});\n","import { DefineComponent } from \"vue\";\nimport Card from \"./Card\";\nimport { withInstall } from \"../utils/withInstall\";\n\n// 使用 withInstall 函数来增强 Button 组件\nexport const YCard = withInstall(Card as unknown as DefineComponent);\n\n// 默认导出带install方法的组件\nexport default YCard;\n","import type { Plugin } from \"vue\";\r\nimport { YButton } from \"./Button\";\r\nimport { YCard } from \"./Card\";\r\n\r\n// 所有组件列表\r\nconst components = [YButton, YCard] as Plugin[];\r\n\r\n// 全局安装函数\r\nexport const install: Plugin[\"install\"] = (app) => {\r\n  components.forEach((component) => {\r\n    app.use(component);\r\n  });\r\n};\r\n// 默认导出带install方法的插件对象\r\nexport const YeykbzUI = {\r\n  install,\r\n  version: \"__VERSION__\",\r\n};\r\n\r\n// export default YeykbzUI;\r\n"],"names":["props","size","type","String","default","color","round","Boolean","plain","icon","defineComponent","name","setup","slots","getColorClass","classKey","styles","_createVNode","base","square","hoverEffect","shadow","bodyStyle","Object","shadowClassMap","always","shadowAlways","hover","shadowHover","never","shadowNever","hasHeader","header","hasFooter","footer","hasImage","image","cardBase","borderSection","flexCenter","contentBase","contentNoHeader","contentNoFooter"],"mappings":"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"}