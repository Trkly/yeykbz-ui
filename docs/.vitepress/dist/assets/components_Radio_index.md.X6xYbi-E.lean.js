import{h as r,D as p,c as h,o as u,H as s,w as n,a as l,F as f,m as t,a3 as b,a6 as c,a4 as g,p as o}from"./chunks/framework.DyjQ86ua.js";import{d as v,f as y}from"./chunks/index.GfJILXev.js";const A=`<template>\r
  <YRadio v-model="groupValue" name="group1" label="A">选项A</YRadio>\r
  <YRadio v-model="groupValue" name="group1" label="B">选项B</YRadio>\r
</template>\r
\r
<script setup>\r
import { ref } from "vue";\r
const groupValue = ref("A");\r
<\/script>\r
`,F={__name:"Radio_3",setup(k){const e=r("A");return(m,a)=>{const i=p("YRadio");return u(),h(f,null,[s(i,{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=d=>e.value=d),name:"group1",label:"A"},{default:n(()=>a[2]||(a[2]=[l("选项A")])),_:1},8,["modelValue"]),s(i,{modelValue:e.value,"onUpdate:modelValue":a[1]||(a[1]=d=>e.value=d),name:"group1",label:"B"},{default:n(()=>a[3]||(a[3]=[l("选项B")])),_:1},8,["modelValue"])],64)}}},C=`<template>\r
  <YRadio v-model="value" label="1" disabled>禁用选项</YRadio>\r
  <YRadio v-model="value" label="2">正常选项</YRadio>\r
</template>\r
\r
<script setup>\r
import { ref } from "vue";\r
const value = ref("1");\r
<\/script>\r
`,B={__name:"Radio_2",setup(k){const e=r("1");return(m,a)=>{const i=p("YRadio");return u(),h(f,null,[s(i,{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=d=>e.value=d),label:"1",disabled:""},{default:n(()=>a[2]||(a[2]=[l("禁用选项")])),_:1},8,["modelValue"]),s(i,{modelValue:e.value,"onUpdate:modelValue":a[1]||(a[1]=d=>e.value=d),label:"2"},{default:n(()=>a[3]||(a[3]=[l("正常选项")])),_:1},8,["modelValue"])],64)}}},D=`<template>\r
  <YRadio v-model="value" label="1">选项1</YRadio>\r
  <YRadio v-model="value" label="2">选项2</YRadio>\r
</template>\r
\r
<script setup>\r
import { ref } from "vue";\r
const value = ref("1");\r
<\/script>\r
`,E={__name:"Radio_1",setup(k){const e=r("1");return(m,a)=>{const i=p("YRadio");return u(),h(f,null,[s(i,{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=d=>e.value=d),label:"1"},{default:n(()=>a[2]||(a[2]=[l("选项1")])),_:1},8,["modelValue"]),s(i,{modelValue:e.value,"onUpdate:modelValue":a[1]||(a[1]=d=>e.value=d),label:"2"},{default:n(()=>a[3]||(a[3]=[l("选项2")])),_:1},8,["modelValue"])],64)}}},x=JSON.parse('{"title":"YRadio","description":"","frontmatter":{},"headers":[],"relativePath":"components/Radio/index.md","filePath":"components/Radio/index.md"}'),V={name:"components/Radio/index.md"},_=Object.assign(V,{setup(k){const e=r(!0);return(m,a)=>{const i=p("ClientOnly");return u(),h("div",null,[a[3]||(a[3]=t("h1",{id:"yradio",tabindex:"-1"},[l("YRadio "),t("a",{class:"header-anchor",href:"#yradio","aria-label":'Permalink to "YRadio"'},"​")],-1)),a[4]||(a[4]=t("p",null,"单选框组件，支持双向绑定、禁用状态和自定义样式。",-1)),a[5]||(a[5]=t("h2",{id:"基本用法",tabindex:"-1"},[l("基本用法 "),t("a",{class:"header-anchor",href:"#基本用法","aria-label":'Permalink to "基本用法"'},"​")],-1)),b(s(o(v),null,null,512),[[g,e.value]]),s(i,null,{default:n(()=>[s(o(y),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,onMount:a[0]||(a[0]=()=>{e.value=!1}),vueCode:o(D)},{vue:n(()=>[s(E)]),_:1},8,["vueCode"])]),_:1}),a[6]||(a[6]=t("h2",{id:"禁用状态",tabindex:"-1"},[l("禁用状态 "),t("a",{class:"header-anchor",href:"#禁用状态","aria-label":'Permalink to "禁用状态"'},"​")],-1)),a[7]||(a[7]=t("p",null,[l("使用 "),t("code",null,"disabled"),l(" 属性禁用单选框")],-1)),b(s(o(v),null,null,512),[[g,e.value]]),s(i,null,{default:n(()=>[s(o(y),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,onMount:a[1]||(a[1]=()=>{e.value=!1}),vueCode:o(C)},{vue:n(()=>[s(B)]),_:1},8,["vueCode"])]),_:1}),a[8]||(a[8]=t("h2",{id:"组合使用",tabindex:"-1"},[l("组合使用 "),t("a",{class:"header-anchor",href:"#组合使用","aria-label":'Permalink to "组合使用"'},"​")],-1)),a[9]||(a[9]=t("p",null,[l("单选框组需要配合相同的 "),t("code",null,"name"),l(" 属性实现互斥：")],-1)),b(s(o(v),null,null,512),[[g,e.value]]),s(i,null,{default:n(()=>[s(o(y),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,onMount:a[2]||(a[2]=()=>{e.value=!1}),vueCode:o(A)},{vue:n(()=>[s(F)]),_:1},8,["vueCode"])]),_:1}),a[10]||(a[10]=c(`<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>modelValue</td><td>绑定值</td><td>string/number/boolean</td><td>null</td></tr><tr><td>label</td><td>单选框的值</td><td>string/number/boolean</td><td>&quot;&quot;</td></tr><tr><td>name</td><td>原生name属性</td><td>string</td><td>&quot;&quot;</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>false</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义单选框标签内容</td></tr></tbody></table><h2 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h2><p>可以通过覆盖以下 CSS 变量自定义样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --theme-primary-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#409eff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 主色 */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --vk-primary-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#409eff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 备用主色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li><code>label</code> 属性需要与 <code>modelValue</code> 类型一致</li><li>禁用状态下不会触发状态变更</li><li>组合使用时需要保持相同的 <code>name</code> 属性</li><li>自定义样式时建议通过覆盖 CSS 变量实现</li></ol><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RadioProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** 绑定值 */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  modelValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** 单选框值 */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  label</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** 原生name属性 */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** 禁用状态 */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  disabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11))])}}});export{x as __pageData,_ as default};
