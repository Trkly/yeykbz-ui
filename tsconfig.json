{
  "compilerOptions": {
    "target": "ESNext",         // 使用最新ES标准
    "module": "ESNext",         // 配合Vite的ESM规范
    "moduleResolution": "bundler", // 必须的模块解析策略
    "strict": true,             // 开启所有严格类型检查
    "jsx": "preserve",          // 支持Vue JSX语法
    "jsxFactory": "h",
    "jsxFragmentFactory": "Fragment",
    "jsxImportSource": "vue",  // 声明 Vue 的 JSX 类型来源
    "types": ["vite/client", "unocss/vite", "@vue/runtime-dom", "vue"], // 用于显式引入第三方库的类型声明文件，帮助 TypeScript 理解外部模块的类型定义
    "esModuleInterop": true, // 允许以 CommonJS 格式编写的模块（如部分 Node.js 库）通过默认导入（import x from 'y'）语法加载，而非强制使用 import * as x from 'y' 的命名空间导入方式
    "baseUrl": ".",             // 基础路径解析
    "paths": {
      "@/*": ["src/*"],         // 必须与vite.config.ts的alias对应
      "#/*": ["types/*"]     // 类型定义目录
//      "vue": ["node_modules/vue/dist/vue.esm-bundler.js"]  // 显式指定路径
    },

    "allowJs": false,           // 纯TypeScript项目建议关闭
    "skipLibCheck": true,       // 提升编译速度
    "declaration": true,        // 生成.d.ts类型声明文件
    "declarationDir": "./dist/types", //类型声明输出目录
    "outDir": "./dist"      // 类型输出目录
  },
  "include": [
    "./**/*.*",
    "./shims-vue.d.ts",
    "env.d.ts"
  ],
  "exclude": ["node_modules", "dist"],
  "allowSyntheticDefaultImports":"true",
}